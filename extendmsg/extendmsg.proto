syntax = "proto3";
package OpenIMServer.extendMsg;
import "wrapperspb/wrapperspb.proto";
option go_package = "github.com/OpenIMSDK/protocol/extendmsg";

message ExtendMsgSet {
  string conversationID = 1;
  int32 sessionType = 2;
  map <string, ExtendMsg>extendMsgs = 3;
  int64 MaxMsgUpdateTime = 4;
  int32 extendMsgNum = 5;
  int64 createTime = 6;
}

message ExtendMsg {
  map <string, KeyValue>reactionExtensionList = 1;
  string clientMsgID = 2;
  int64 msgFirstModifyTime = 3;
  string attachedInfo = 4;
  string ex = 5;
}

message KeyValue {
  string typeKey = 1;
  string value = 2;
  int64 latestUpdateTime = 3;
}

message ReactionMessageModifierNotification {
  string conversationID = 1;
  string opUserID = 2;
  int32 sessionType = 3;
  map <string, KeyValue>successReactionExtensions = 4;
  string clientMsgID = 5;
  bool isReact = 6;
  bool isExternalExtensions = 7;
  int64 msgFirstModifyTime = 8;
}

message ModifyMessageReactionExtensionsReq {
  string conversationID = 1;
  int32 sessionType = 2;
  map <string, KeyValue>reactionExtensions = 3;
  string clientMsgID = 4;
  OpenIMServer.protobuf.StringValue ex = 5;
  OpenIMServer.protobuf.StringValue attachedInfo = 6;
  bool isReact = 7;
  bool isExternalExtensions = 8;
  int64 msgFirstModifyTime = 9;
}
message SetMessageReactionExtensionsReq {
  string conversationID = 1;
  int32 sessionType = 2;
  map <string, KeyValue>reactionExtensions = 3;
  string clientMsgID = 4;
  OpenIMServer.protobuf.StringValue ex = 5;
  OpenIMServer.protobuf.StringValue attachedInfo = 6;
  bool isReact = 7;
  bool isExternalExtensions = 8;
  int64 msgFirstModifyTime = 9;
}
message SetMessageReactionExtensionsResp {
  string clientMsgID = 1;
  int64 msgFirstModifyTime = 2;
  bool isReact = 3;
  repeated KeyValueResp result = 4;
}

message GetMessagesReactionExtensionsReq {
  string conversationID = 1;
  int32 sessionType = 2;
  message MessageReactionKey {
    string clientMsgID = 1;
    int64 msgFirstModifyTime = 2;
  }
  repeated MessageReactionKey messageReactionKeys = 3;
  repeated string TypeKeys = 4;
}

message GetMessagesReactionExtensionsResp{
  repeated SingleMessageExtensionResult singleMessageResult = 1;

}

message SingleMessageExtensionResult {
  map <string, KeyValue>reactionExtensions = 1;
  string clientMsgID = 2;
}

message ModifyMessageReactionExtensionsResp {
  repeated ExtendMsgResp successList = 1;
  repeated ExtendMsgResp failedList = 2;
}

message DeleteMessagesReactionExtensionsReq {
  string operationID = 1;
  string opUserID = 2;
  string conversationID = 3;
  int32 sessionType = 4;
  string clientMsgID = 5;
  bool isExternalExtensions = 6;
  int64 msgFirstModifyTime = 7;
  repeated KeyValue reactionExtensions = 8;
}

message DeleteMessagesReactionExtensionsResp {
  repeated KeyValueResp result = 1;
}

message ExtendMsgResp {
  ExtendMsg extendMsg = 1;
}

message KeyValueResp {
  KeyValue keyValue = 1;
  int32 errCode = 2;
  string errMsg = 3;
} 
