// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.1
// 	protoc        v4.22.0
// source: encryption/encryption.proto

package encryption

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CommonResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrCode int32  `protobuf:"varint,1,opt,name=errCode,proto3" json:"errCode"`
	ErrMsg  string `protobuf:"bytes,2,opt,name=errMsg,proto3" json:"errMsg"`
}

func (x *CommonResp) Reset() {
	*x = CommonResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_encryption_encryption_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonResp) ProtoMessage() {}

func (x *CommonResp) ProtoReflect() protoreflect.Message {
	mi := &file_encryption_encryption_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonResp.ProtoReflect.Descriptor instead.
func (*CommonResp) Descriptor() ([]byte, []int) {
	return file_encryption_encryption_proto_rawDescGZIP(), []int{0}
}

func (x *CommonResp) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *CommonResp) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

type MsgContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SendID      string `protobuf:"bytes,1,opt,name=sendID,proto3" json:"sendID"`
	RecvID      string `protobuf:"bytes,2,opt,name=recvID,proto3" json:"recvID"`
	GroupID     string `protobuf:"bytes,3,opt,name=groupID,proto3" json:"groupID"`
	SessionType int32  `protobuf:"varint,4,opt,name=sessionType,proto3" json:"sessionType"`
	MsgFrom     int32  `protobuf:"varint,5,opt,name=msgFrom,proto3" json:"msgFrom"`
	ContentType int32  `protobuf:"varint,6,opt,name=contentType,proto3" json:"contentType"`
	Content     []byte `protobuf:"bytes,7,opt,name=content,proto3" json:"content"`
	KeyVersion  int32  `protobuf:"varint,8,opt,name=keyVersion,proto3" json:"keyVersion"`
}

func (x *MsgContent) Reset() {
	*x = MsgContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_encryption_encryption_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgContent) ProtoMessage() {}

func (x *MsgContent) ProtoReflect() protoreflect.Message {
	mi := &file_encryption_encryption_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgContent.ProtoReflect.Descriptor instead.
func (*MsgContent) Descriptor() ([]byte, []int) {
	return file_encryption_encryption_proto_rawDescGZIP(), []int{1}
}

func (x *MsgContent) GetSendID() string {
	if x != nil {
		return x.SendID
	}
	return ""
}

func (x *MsgContent) GetRecvID() string {
	if x != nil {
		return x.RecvID
	}
	return ""
}

func (x *MsgContent) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

func (x *MsgContent) GetSessionType() int32 {
	if x != nil {
		return x.SessionType
	}
	return 0
}

func (x *MsgContent) GetMsgFrom() int32 {
	if x != nil {
		return x.MsgFrom
	}
	return 0
}

func (x *MsgContent) GetContentType() int32 {
	if x != nil {
		return x.ContentType
	}
	return 0
}

func (x *MsgContent) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *MsgContent) GetKeyVersion() int32 {
	if x != nil {
		return x.KeyVersion
	}
	return 0
}

type EncryptContentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgContent  *MsgContent `protobuf:"bytes,1,opt,name=msgContent,proto3" json:"msgContent"`
	RecvIDList  []string    `protobuf:"bytes,2,rep,name=recvIDList,proto3" json:"recvIDList"`
	OperationID string      `protobuf:"bytes,3,opt,name=operationID,proto3" json:"operationID"`
}

func (x *EncryptContentReq) Reset() {
	*x = EncryptContentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_encryption_encryption_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncryptContentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptContentReq) ProtoMessage() {}

func (x *EncryptContentReq) ProtoReflect() protoreflect.Message {
	mi := &file_encryption_encryption_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptContentReq.ProtoReflect.Descriptor instead.
func (*EncryptContentReq) Descriptor() ([]byte, []int) {
	return file_encryption_encryption_proto_rawDescGZIP(), []int{2}
}

func (x *EncryptContentReq) GetMsgContent() *MsgContent {
	if x != nil {
		return x.MsgContent
	}
	return nil
}

func (x *EncryptContentReq) GetRecvIDList() []string {
	if x != nil {
		return x.RecvIDList
	}
	return nil
}

func (x *EncryptContentReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

type EncryptContentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp     *CommonResp   `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp"`
	MsgContentList []*MsgContent `protobuf:"bytes,2,rep,name=msgContentList,proto3" json:"msgContentList"`
}

func (x *EncryptContentResp) Reset() {
	*x = EncryptContentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_encryption_encryption_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncryptContentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptContentResp) ProtoMessage() {}

func (x *EncryptContentResp) ProtoReflect() protoreflect.Message {
	mi := &file_encryption_encryption_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptContentResp.ProtoReflect.Descriptor instead.
func (*EncryptContentResp) Descriptor() ([]byte, []int) {
	return file_encryption_encryption_proto_rawDescGZIP(), []int{3}
}

func (x *EncryptContentResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *EncryptContentResp) GetMsgContentList() []*MsgContent {
	if x != nil {
		return x.MsgContentList
	}
	return nil
}

type GetEncryptionKeyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationID string `protobuf:"bytes,1,opt,name=conversationID,proto3" json:"conversationID"`
	KeyVersion     int32  `protobuf:"varint,2,opt,name=keyVersion,proto3" json:"keyVersion"`
}

func (x *GetEncryptionKeyReq) Reset() {
	*x = GetEncryptionKeyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_encryption_encryption_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEncryptionKeyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEncryptionKeyReq) ProtoMessage() {}

func (x *GetEncryptionKeyReq) ProtoReflect() protoreflect.Message {
	mi := &file_encryption_encryption_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEncryptionKeyReq.ProtoReflect.Descriptor instead.
func (*GetEncryptionKeyReq) Descriptor() ([]byte, []int) {
	return file_encryption_encryption_proto_rawDescGZIP(), []int{4}
}

func (x *GetEncryptionKeyReq) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

func (x *GetEncryptionKeyReq) GetKeyVersion() int32 {
	if x != nil {
		return x.KeyVersion
	}
	return 0
}

type VersionKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version int32  `protobuf:"varint,1,opt,name=version,proto3" json:"version"`
	Key     string `protobuf:"bytes,2,opt,name=key,proto3" json:"key"`
}

func (x *VersionKey) Reset() {
	*x = VersionKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_encryption_encryption_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionKey) ProtoMessage() {}

func (x *VersionKey) ProtoReflect() protoreflect.Message {
	mi := &file_encryption_encryption_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionKey.ProtoReflect.Descriptor instead.
func (*VersionKey) Descriptor() ([]byte, []int) {
	return file_encryption_encryption_proto_rawDescGZIP(), []int{5}
}

func (x *VersionKey) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *VersionKey) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type GetEncryptionKeyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VersionKeyList []*VersionKey `protobuf:"bytes,2,rep,name=versionKeyList,proto3" json:"versionKeyList"`
}

func (x *GetEncryptionKeyResp) Reset() {
	*x = GetEncryptionKeyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_encryption_encryption_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEncryptionKeyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEncryptionKeyResp) ProtoMessage() {}

func (x *GetEncryptionKeyResp) ProtoReflect() protoreflect.Message {
	mi := &file_encryption_encryption_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEncryptionKeyResp.ProtoReflect.Descriptor instead.
func (*GetEncryptionKeyResp) Descriptor() ([]byte, []int) {
	return file_encryption_encryption_proto_rawDescGZIP(), []int{6}
}

func (x *GetEncryptionKeyResp) GetVersionKeyList() []*VersionKey {
	if x != nil {
		return x.VersionKeyList
	}
	return nil
}

type GenEncryptionKeyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConversationID string `protobuf:"bytes,1,opt,name=conversationID,proto3" json:"conversationID"`
}

func (x *GenEncryptionKeyReq) Reset() {
	*x = GenEncryptionKeyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_encryption_encryption_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenEncryptionKeyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenEncryptionKeyReq) ProtoMessage() {}

func (x *GenEncryptionKeyReq) ProtoReflect() protoreflect.Message {
	mi := &file_encryption_encryption_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenEncryptionKeyReq.ProtoReflect.Descriptor instead.
func (*GenEncryptionKeyReq) Descriptor() ([]byte, []int) {
	return file_encryption_encryption_proto_rawDescGZIP(), []int{7}
}

func (x *GenEncryptionKeyReq) GetConversationID() string {
	if x != nil {
		return x.ConversationID
	}
	return ""
}

type GenEncryptionKeyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GenEncryptionKeyResp) Reset() {
	*x = GenEncryptionKeyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_encryption_encryption_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenEncryptionKeyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenEncryptionKeyResp) ProtoMessage() {}

func (x *GenEncryptionKeyResp) ProtoReflect() protoreflect.Message {
	mi := &file_encryption_encryption_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenEncryptionKeyResp.ProtoReflect.Descriptor instead.
func (*GenEncryptionKeyResp) Descriptor() ([]byte, []int) {
	return file_encryption_encryption_proto_rawDescGZIP(), []int{8}
}

type GroupVersionKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version int32  `protobuf:"varint,1,opt,name=version,proto3" json:"version"`
	Key     string `protobuf:"bytes,2,opt,name=key,proto3" json:"key"`
	GroupID string `protobuf:"bytes,3,opt,name=groupID,proto3" json:"groupID"`
}

func (x *GroupVersionKey) Reset() {
	*x = GroupVersionKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_encryption_encryption_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupVersionKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupVersionKey) ProtoMessage() {}

func (x *GroupVersionKey) ProtoReflect() protoreflect.Message {
	mi := &file_encryption_encryption_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupVersionKey.ProtoReflect.Descriptor instead.
func (*GroupVersionKey) Descriptor() ([]byte, []int) {
	return file_encryption_encryption_proto_rawDescGZIP(), []int{9}
}

func (x *GroupVersionKey) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *GroupVersionKey) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *GroupVersionKey) GetGroupID() string {
	if x != nil {
		return x.GroupID
	}
	return ""
}

type DecryptContentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgContent  *MsgContent `protobuf:"bytes,1,opt,name=msgContent,proto3" json:"msgContent"`
	OperationID string      `protobuf:"bytes,2,opt,name=operationID,proto3" json:"operationID"`
}

func (x *DecryptContentReq) Reset() {
	*x = DecryptContentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_encryption_encryption_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecryptContentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecryptContentReq) ProtoMessage() {}

func (x *DecryptContentReq) ProtoReflect() protoreflect.Message {
	mi := &file_encryption_encryption_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecryptContentReq.ProtoReflect.Descriptor instead.
func (*DecryptContentReq) Descriptor() ([]byte, []int) {
	return file_encryption_encryption_proto_rawDescGZIP(), []int{10}
}

func (x *DecryptContentReq) GetMsgContent() *MsgContent {
	if x != nil {
		return x.MsgContent
	}
	return nil
}

func (x *DecryptContentReq) GetOperationID() string {
	if x != nil {
		return x.OperationID
	}
	return ""
}

type DecryptContentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonResp *CommonResp `protobuf:"bytes,1,opt,name=CommonResp,proto3" json:"CommonResp"`
	MsgContent *MsgContent `protobuf:"bytes,2,opt,name=msgContent,proto3" json:"msgContent"`
}

func (x *DecryptContentResp) Reset() {
	*x = DecryptContentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_encryption_encryption_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecryptContentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecryptContentResp) ProtoMessage() {}

func (x *DecryptContentResp) ProtoReflect() protoreflect.Message {
	mi := &file_encryption_encryption_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecryptContentResp.ProtoReflect.Descriptor instead.
func (*DecryptContentResp) Descriptor() ([]byte, []int) {
	return file_encryption_encryption_proto_rawDescGZIP(), []int{11}
}

func (x *DecryptContentResp) GetCommonResp() *CommonResp {
	if x != nil {
		return x.CommonResp
	}
	return nil
}

func (x *DecryptContentResp) GetMsgContent() *MsgContent {
	if x != nil {
		return x.MsgContent
	}
	return nil
}

var File_encryption_encryption_proto protoreflect.FileDescriptor

var file_encryption_encryption_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x65, 0x6e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x4f,
	0x70, 0x65, 0x6e, 0x49, 0x4d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x65, 0x6e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3e, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x22, 0xee, 0x01, 0x0a, 0x0a, 0x4d, 0x73, 0x67, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x49, 0x44, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x63, 0x76, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x63, 0x76, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x12,
	0x20, 0x0a, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6b, 0x65, 0x79, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6b, 0x65, 0x79,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x9a, 0x01, 0x0a, 0x11, 0x45, 0x6e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x43, 0x0a,
	0x0a, 0x6d, 0x73, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4d, 0x73, 0x67, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x6d, 0x73, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x63, 0x76, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x76, 0x49, 0x44, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x22, 0xa6, 0x01, 0x0a, 0x12, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x43, 0x0a, 0x0a, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x65,
	0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x4b, 0x0a, 0x0e, 0x6d, 0x73, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49,
	0x4d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x0e, 0x6d,
	0x73, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x5d, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65,
	0x79, 0x52, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a,
	0x6b, 0x65, 0x79, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x6b, 0x65, 0x79, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x38, 0x0a, 0x0a,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x63, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4b,
	0x0a, 0x0e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x52, 0x0e, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x3d, 0x0a, 0x13, 0x47,
	0x65, 0x6e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x52,
	0x65, 0x71, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x16, 0x0a, 0x14, 0x47, 0x65,
	0x6e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x57, 0x0a, 0x0f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x44, 0x22, 0x7a, 0x0a, 0x11, 0x44,
	0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x43, 0x0a, 0x0a, 0x6d, 0x73, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4d,
	0x73, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x6d, 0x73, 0x67, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x9e, 0x01, 0x0a, 0x12, 0x44, 0x65, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x43,
	0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x43, 0x0a, 0x0a, 0x6d, 0x73, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x6d, 0x73,
	0x67, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x32, 0xee, 0x01, 0x0a, 0x0a, 0x65, 0x6e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6f, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x45, 0x6e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x2c, 0x2e, 0x4f, 0x70,
	0x65, 0x6e, 0x49, 0x4d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x65, 0x6e, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x2d, 0x2e, 0x4f, 0x70, 0x65, 0x6e,
	0x49, 0x4d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x6f, 0x0a, 0x10, 0x47, 0x65, 0x6e, 0x45,
	0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x2c, 0x2e, 0x4f,
	0x70, 0x65, 0x6e, 0x49, 0x4d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x65, 0x6e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x6e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x2d, 0x2e, 0x4f, 0x70, 0x65,
	0x6e, 0x49, 0x4d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x6e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x42, 0x2a, 0x5a, 0x28, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x4d, 0x53, 0x44,
	0x4b, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x65, 0x6e, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_encryption_encryption_proto_rawDescOnce sync.Once
	file_encryption_encryption_proto_rawDescData = file_encryption_encryption_proto_rawDesc
)

func file_encryption_encryption_proto_rawDescGZIP() []byte {
	file_encryption_encryption_proto_rawDescOnce.Do(func() {
		file_encryption_encryption_proto_rawDescData = protoimpl.X.CompressGZIP(file_encryption_encryption_proto_rawDescData)
	})
	return file_encryption_encryption_proto_rawDescData
}

var file_encryption_encryption_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_encryption_encryption_proto_goTypes = []interface{}{
	(*CommonResp)(nil),           // 0: OpenIMServer.encryption.CommonResp
	(*MsgContent)(nil),           // 1: OpenIMServer.encryption.MsgContent
	(*EncryptContentReq)(nil),    // 2: OpenIMServer.encryption.EncryptContentReq
	(*EncryptContentResp)(nil),   // 3: OpenIMServer.encryption.EncryptContentResp
	(*GetEncryptionKeyReq)(nil),  // 4: OpenIMServer.encryption.GetEncryptionKeyReq
	(*VersionKey)(nil),           // 5: OpenIMServer.encryption.VersionKey
	(*GetEncryptionKeyResp)(nil), // 6: OpenIMServer.encryption.GetEncryptionKeyResp
	(*GenEncryptionKeyReq)(nil),  // 7: OpenIMServer.encryption.GenEncryptionKeyReq
	(*GenEncryptionKeyResp)(nil), // 8: OpenIMServer.encryption.GenEncryptionKeyResp
	(*GroupVersionKey)(nil),      // 9: OpenIMServer.encryption.GroupVersionKey
	(*DecryptContentReq)(nil),    // 10: OpenIMServer.encryption.DecryptContentReq
	(*DecryptContentResp)(nil),   // 11: OpenIMServer.encryption.DecryptContentResp
}
var file_encryption_encryption_proto_depIdxs = []int32{
	1, // 0: OpenIMServer.encryption.EncryptContentReq.msgContent:type_name -> OpenIMServer.encryption.MsgContent
	0, // 1: OpenIMServer.encryption.EncryptContentResp.CommonResp:type_name -> OpenIMServer.encryption.CommonResp
	1, // 2: OpenIMServer.encryption.EncryptContentResp.msgContentList:type_name -> OpenIMServer.encryption.MsgContent
	5, // 3: OpenIMServer.encryption.GetEncryptionKeyResp.versionKeyList:type_name -> OpenIMServer.encryption.VersionKey
	1, // 4: OpenIMServer.encryption.DecryptContentReq.msgContent:type_name -> OpenIMServer.encryption.MsgContent
	0, // 5: OpenIMServer.encryption.DecryptContentResp.CommonResp:type_name -> OpenIMServer.encryption.CommonResp
	1, // 6: OpenIMServer.encryption.DecryptContentResp.msgContent:type_name -> OpenIMServer.encryption.MsgContent
	4, // 7: OpenIMServer.encryption.encryption.GetEncryptionKey:input_type -> OpenIMServer.encryption.GetEncryptionKeyReq
	7, // 8: OpenIMServer.encryption.encryption.GenEncryptionKey:input_type -> OpenIMServer.encryption.GenEncryptionKeyReq
	6, // 9: OpenIMServer.encryption.encryption.GetEncryptionKey:output_type -> OpenIMServer.encryption.GetEncryptionKeyResp
	8, // 10: OpenIMServer.encryption.encryption.GenEncryptionKey:output_type -> OpenIMServer.encryption.GenEncryptionKeyResp
	9, // [9:11] is the sub-list for method output_type
	7, // [7:9] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_encryption_encryption_proto_init() }
func file_encryption_encryption_proto_init() {
	if File_encryption_encryption_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_encryption_encryption_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_encryption_encryption_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_encryption_encryption_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EncryptContentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_encryption_encryption_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EncryptContentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_encryption_encryption_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEncryptionKeyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_encryption_encryption_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_encryption_encryption_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEncryptionKeyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_encryption_encryption_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenEncryptionKeyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_encryption_encryption_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenEncryptionKeyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_encryption_encryption_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupVersionKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_encryption_encryption_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecryptContentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_encryption_encryption_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecryptContentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_encryption_encryption_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_encryption_encryption_proto_goTypes,
		DependencyIndexes: file_encryption_encryption_proto_depIdxs,
		MessageInfos:      file_encryption_encryption_proto_msgTypes,
	}.Build()
	File_encryption_encryption_proto = out.File
	file_encryption_encryption_proto_rawDesc = nil
	file_encryption_encryption_proto_goTypes = nil
	file_encryption_encryption_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// EncryptionClient is the client API for Encryption service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EncryptionClient interface {
	// rpc EncryptContent(EncryptContentReq)returns(EncryptContentResp);
	GetEncryptionKey(ctx context.Context, in *GetEncryptionKeyReq, opts ...grpc.CallOption) (*GetEncryptionKeyResp, error)
	GenEncryptionKey(ctx context.Context, in *GenEncryptionKeyReq, opts ...grpc.CallOption) (*GenEncryptionKeyResp, error)
}

type encryptionClient struct {
	cc grpc.ClientConnInterface
}

func NewEncryptionClient(cc grpc.ClientConnInterface) EncryptionClient {
	return &encryptionClient{cc}
}

func (c *encryptionClient) GetEncryptionKey(ctx context.Context, in *GetEncryptionKeyReq, opts ...grpc.CallOption) (*GetEncryptionKeyResp, error) {
	out := new(GetEncryptionKeyResp)
	err := c.cc.Invoke(ctx, "/OpenIMServer.encryption.encryption/GetEncryptionKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *encryptionClient) GenEncryptionKey(ctx context.Context, in *GenEncryptionKeyReq, opts ...grpc.CallOption) (*GenEncryptionKeyResp, error) {
	out := new(GenEncryptionKeyResp)
	err := c.cc.Invoke(ctx, "/OpenIMServer.encryption.encryption/GenEncryptionKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EncryptionServer is the server API for Encryption service.
type EncryptionServer interface {
	// rpc EncryptContent(EncryptContentReq)returns(EncryptContentResp);
	GetEncryptionKey(context.Context, *GetEncryptionKeyReq) (*GetEncryptionKeyResp, error)
	GenEncryptionKey(context.Context, *GenEncryptionKeyReq) (*GenEncryptionKeyResp, error)
}

// UnimplementedEncryptionServer can be embedded to have forward compatible implementations.
type UnimplementedEncryptionServer struct {
}

func (*UnimplementedEncryptionServer) GetEncryptionKey(context.Context, *GetEncryptionKeyReq) (*GetEncryptionKeyResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEncryptionKey not implemented")
}
func (*UnimplementedEncryptionServer) GenEncryptionKey(context.Context, *GenEncryptionKeyReq) (*GenEncryptionKeyResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenEncryptionKey not implemented")
}

func RegisterEncryptionServer(s *grpc.Server, srv EncryptionServer) {
	s.RegisterService(&_Encryption_serviceDesc, srv)
}

func _Encryption_GetEncryptionKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEncryptionKeyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EncryptionServer).GetEncryptionKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMServer.encryption.encryption/GetEncryptionKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EncryptionServer).GetEncryptionKey(ctx, req.(*GetEncryptionKeyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Encryption_GenEncryptionKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GenEncryptionKeyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EncryptionServer).GenEncryptionKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/OpenIMServer.encryption.encryption/GenEncryptionKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EncryptionServer).GenEncryptionKey(ctx, req.(*GenEncryptionKeyReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Encryption_serviceDesc = grpc.ServiceDesc{
	ServiceName: "OpenIMServer.encryption.encryption",
	HandlerType: (*EncryptionServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetEncryptionKey",
			Handler:    _Encryption_GetEncryptionKey_Handler,
		},
		{
			MethodName: "GenEncryptionKey",
			Handler:    _Encryption_GenEncryptionKey_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "encryption/encryption.proto",
}
